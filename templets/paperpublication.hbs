{{!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Document Upload</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-image: url(' /public/images/document 2.jpeg');
        
            
        }
        .upload-container {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 600px;
        }
        .upload-header {
            text-align: center;
            margin-bottom: 20px;
        }
        .upload-section {
            margin-bottom: 20px;
        }
        .upload-group {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .upload-group input[type="text"] {
            flex: 1;
            padding: 8px;
            margin-right: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .upload-group input[type="file"] {
            margin-right: 10px;
        }
        .upload-group button {
            padding: 8px 12px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .upload-group button:hover {
            background-color: #0056b3;
        }
        .add-section {
            padding: 10px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            display: block;
            width: 100%;
            margin-bottom: 20px;
        }
        .add-section:hover {
            background-color: #218838;
        }
        .submit-button {
            padding: 10px;
            background: #17a2b8;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        .submit-button:hover {
            background-color: #138496;
        }
    </style>
</head>
<body>
    <div class="upload-container">
        <div class="upload-header">
            <h2>DOCUMENT UPLOADS</h2>
        </div>
        <form id="uploadForm">
            <div id="uploadSections">
                <div class="upload-section">
                    <h4>Document Section</h4>
                    <div class="upload-group">
                        <input type="text" placeholder="Paper Name" required>
                        <input type="file" required>
                        <button type="button" class="add-more">+</button>
                    </div>
                </div>
            </div>
            <button type="button" class="add-section">+ Add Another Section</button>
            <button type="submit" class="submit-button">Submit</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const uploadSections = document.getElementById('uploadSections')
            function addNewUploadField(section) {
                const newField = document.createElement('div');
                newField.classList.add('upload-group');
                newField.innerHTML = `
                    <input type="text" placeholder="Paper Name" required>
                    <input type="file" required>
                    <button type="button" class="add-more">+</button>
                `;
                section.appendChild(newField);
            }

        
            uploadSections.addEventListener('click', (event) => {
                if (event.target.classList.contains('add-more')) {
                    event.preventDefault();
                    const section = event.target.closest('.upload-section');
                    addNewUploadField(section);
                }
            });

            // Function to add a new document section
            function addNewSection() {
                const newSection = document.createElement('div');
                newSection.classList.add('upload-section');
                newSection.innerHTML = `
                    <h4>Document Section</h4>
                    <div class="upload-group">
                        <input type="text" placeholder="Paper Name" required>
                        <input type="file" required>
                        <button type="button" class="add-more">+</button>
                    </div>
                `;
                uploadSections.appendChild(newSection);
            }

        
            document.querySelector('.add-section').addEventListener('click', () => {
                addNewSection();
            });

            
            document.getElementById('uploadForm').addEventListener('submit', (event) => {
                event.preventDefault();
                alert('Documents submitted successfully!');
            });
        });
    </script>
</body>
</html> --}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Research Publications</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #2A2F4F;
            --secondary: #917FB3;
            --accent: #E5BEEC;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: linear-gradient(45deg, #FDE2F3, #E5BEEC);
            min-height: 100vh;
            padding: 2rem;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .tabs {
            display: flex;
            background: var(--primary);
        }

        .tab {
            flex: 1;
            padding: 1.5rem;
            text-align: center;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            border-bottom: 3px solid transparent;
        }

        .tab.active {
            border-color: var(--accent);
            background: rgba(255, 255, 255, 0.1);
        }

        .tab-content {
            display: none;
            padding: 2rem;
            min-height: 400px;
        }

        .tab-content.active {
            display: block;
        }

        .upload-section {
            border: 2px dashed var(--secondary);
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            margin: 1rem 0;
            position: relative;
        }

        .add-btn {
            width: 60px;
            height: 60px;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 24px;
            cursor: pointer;
            transition: transform 0.3s ease;
            margin-bottom: 1rem;
        }

        .add-btn:hover {
            transform: rotate(180deg) scale(1.1);
        }

        .file-list {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 1rem;
        }

        .file-card {
            background: rgba(233, 213, 255, 0.3);
            padding: 1rem;
            border-radius: 10px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .date-picker {
            margin-top: 2rem;
            text-align: center;
        }

        input[type="date"] {
            padding: 1rem;
            border: 2px solid var(--secondary);
            border-radius: 10px;
            font-size: 1rem;
            background: white;
        }

        .submit-btn {
            display: block;
            width: 200px;
            margin: 2rem auto;
            padding: 1rem;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .submit-btn:hover {
            transform: translateY(-3px);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="tabs">
            <div class="tab active" onclick="switchTab('paper')">ðŸ“„ Paper</div>
            <div class="tab" onclick="switchTab('journal')">ðŸ“š Journal</div>
            <div class="tab" onclick="switchTab('date')">ðŸ“… Date</div>
        </div>

        <div id="paper" class="tab-content active">
            <div class="upload-section">
                <button class="add-btn" onclick="document.getElementById('paper-input').click()">+</button>
                <p>Upload PDF documents (3-4 pages each)</p>
                <input type="file" id="paper-input" multiple accept=".pdf" hidden 
                    onchange="handleFiles(this.files, 'paper')">
                <div id="paper-list" class="file-list"></div>
            </div>
        </div>

        <div id="journal" class="tab-content">
            <div class="upload-section">
                <button class="add-btn" onclick="document.getElementById('journal-input').click()">+</button>
                <p>Upload Journal Documents</p>
                <input type="file" id="journal-input" multiple accept=".pdf" hidden 
                    onchange="handleFiles(this.files, 'journal')">
                <div id="journal-list" class="file-list"></div>
            </div>
        </div>

        <div id="date" class="tab-content">
            <div class="date-picker">
                <h3>Select Publication Date</h3>
                <input type="date" id="publication-date" required>
            </div>
        </div>

        <button class="submit-btn" onclick="submitDocuments()">Submit Documents</button>
    </div>

    <script>
        let documents = {
            paper: [],
            journal: [],
            date: ''
        };

        function switchTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            document.getElementById(tabName).classList.add('active');
            event.currentTarget.classList.add('active');
        }

        function handleFiles(files, type) {
            const fileList = documents[type];
            Array.from(files).forEach(file => {
                if(file.type === 'application/pdf') {
                    fileList.push(file);
                    updateFileDisplay(type);
                } else {
                    alert('Please upload PDF files only');
                }
            });
        }

        function updateFileDisplay(type) {
            const list = document.getElementById(`${type}-list`);
            list.innerHTML = documents[type].map((file, index) => `
                <div class="file-card">
                    ðŸ“„ ${file.name} 
                    <button onclick="removeFile('${type}', ${index})">Ã—</button>
                </div>
            `).join('');
        }

        function removeFile(type, index) {
            documents[type].splice(index, 1);
            updateFileDisplay(type);
        }

        async function submitDocuments() {
            documents.date = document.getElementById('publication-date').value;
            
            const formData = new FormData();
            documents.paper.forEach(file => formData.append('paper', file));
            documents.journal.forEach(file => formData.append('journal', file));
            formData.append('date', documents.date);

            try {
                const response = await fetch('/submit', {
                    method: 'POST',
                    body: formData
                });
                
                if(response.ok) {
                    alert('Documents submitted successfully!');
                    documents = { paper: [], journal: [], date: '' };
                    document.getElementById('publication-date').value = '';
                    updateFileDisplay('paper');
                    updateFileDisplay('journal');
                }
            } catch (error) {
                console.error('Submission error:', error);
            }
        }
    </script>
</body>
</html>