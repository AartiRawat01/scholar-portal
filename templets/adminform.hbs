<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Form</title>
    <style>
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}

@media print {
    .table, .table__body {
        overflow: visible;
        height: auto ;
        width: auto ;
    }
}

body {
    min-height: 100vh;
    background: url(/images/UPES.png) center / cover;
    display: flex;
    justify-content: center;
    align-items: center;
}

main.table {
    width: 72vw;
    height:auto;
    background-color: #fff5;
    backdrop-filter: blur(7px);
    box-shadow: 0 .4rem .8rem #0005;
    border-radius: .8rem;
    overflow: hidden;
}

.table__header {
    width: 100%;
    height: 10%;
    background-color: #fff4;
    padding: .8rem 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.table__header .input-group {
    width: 35%;
    height: 100%;
    background-color: #fff5;
    padding: 0 .8rem;
    border-radius: 2rem;
 display: flex;
    justify-content: center;
    align-items: center;
    transition: .2s;
}

.table__header .input-group:hover {
    width: 45%;
    background-color: #fff8;
    box-shadow: 0 .1rem .4rem #0002;
}

.table__header .input-group img {
    width: 1.2rem;
    height: 1.2rem;
}

.table__header .input-group input {
    width: 100%;
    padding: 0 .5rem 0 .3rem;
    background-color: transparent;
    border: none;
    outline: none;
}

.table__body {
    width: 95%;
    max-height: calc(89% - 1.6rem);
    background-color: #fffb;
    margin: .8rem auto;
    border-radius: .6rem;
    overflow: auto;
    overflow: overlay;
}

.table__body::-webkit-scrollbar {
    width: 0.5rem;
    height: 0.5rem;
}

.table__body::-webkit-scrollbar-thumb {
    border-radius: .5rem;
    background-color: #0004;
    visibility: hidden;
}

.table__body:hover::-webkit-scrollbar-thumb {
    visibility: visible;
}

table {
    width: 100%;
    border-collapse: collapse;
}

th, td {
    padding: 1rem;
    text-align: left;
}

thead th {
    position: sticky;
    top: 0;
    left: 0;
    background-color: #d5d1defe;
    cursor: pointer;
    text-transform: capitalize;
}

tbody tr:nth-child(even) {
    background-color: #0000000b;
}

tbody tr {
    --delay: .1s;
    transition: .5s ease-in-out var(--delay), background-color 0s;
}

tbody tr.hide {
    opacity: 0;
    transform: translateX(100%);
}

tbody tr:hover {
    background-color: #fff6 !important;
}

tbody tr td,
tbody tr td p,
tbody tr td img {
    transition: .2s ease-in-out;
}

tbody tr.hide td,
tbody tr.hide td p {
    padding: 0;
    font: 0 / 0 sans-serif;
    transition: .2s ease-in-out .5s;
}

tbody tr.hide td img {
    width: 0;
    height: 0;
    transition: .2s ease-in-out .5s;
}

.status {
    padding: .4rem 0;
    border-radius: 2rem;
    text-align: center;
}

.status.Active{
    background-color: #86e49d;
    color: #006b21;
}

.status.withdraw {
    background-color: #d893a3;
    color: #b30021;
}

.status.registered{
    background-color: #ebc474;
}

.status.de-registered {
    background-color: #6fcaea;
}

@media (max-width: 1000px) {
    td:not(:first-of-type) {
        min-width: 12.1rem;
    }
}

thead th span.icon-arrow {
    display: inline-block;
    width: 1.3rem;
    height: 1.3rem;
    border-radius: 50%;
    border: 1.4px solid transparent;
    text-align: center;
    font-size: 1rem;
    margin-left: .5rem;
    transition: .2s ease-in-out;
}

thead th:hover span.icon-arrow {
    border: 1.4px solid #6c00bd;
}

thead th:hover {
    color: #6c00bd;
}

thead th.active span.icon-arrow {
    background-color: #6c00bd;
    color: #fff;
}

thead th.asc span.icon-arrow {
    transform: rotate(180deg);
}

thead th.active, tbody td.active {
    color: #6c00bd;
}

.export__file {
    position: relative;
}

.export__file .export__file-btn {
    display: inline-block;
    width: 2rem;
    height: 2rem;
    background: #fff6 url(images/export.png) center / 80% no-repeat;
    border-radius: 50%;
    transition: .2s ease-in-out;
}

.export__file .export__file-btn:hover {
    background-color: #fff;
    transform: scale(1.15);
    cursor: pointer;
}

.export__file input {
    display: none;
}

.export__file .export__file-options {
    position: absolute;
    right: 0;
    width: 12rem;
    border-radius: .5rem;
    overflow: hidden;
    text-align: center;
    opacity: 0;
    transform: scale(.8);
    transform-origin: top right;
    box-shadow: 0 .2rem .5rem #0004;
    transition: .2s;
}

.export__file input:checked + .export__file-options {
    opacity: 1;
    transform: scale(1);
    z-index: 100;
}

.export__file .export__file-options label {
    display: block;
    width: 100%;
    padding: .6rem 0;
    background-color: #f2f2f2;
    display: flex;
    justify-content: space-around;
    align-items: center;
    transition: .2s ease-in-out;
}

.export__file .export__file-options label:first-of-type {
    padding: 1rem 0;
    background-color: #86e49d !important;
}

.export__file .export__file-options label:hover {
    transform: scale(1.05);
    background-color: #fff;
    cursor: pointer;
}

.export__file .export__file-options img {
    width: 2rem;
    height: auto;
}

        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            width: 30%;
        }
        td {
            width: 70%;
        }
        input[type="text"], input[type="email"], input[type="password"] {
            width: 50%;
            padding: 10px;
            margin: 5px 0 10px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }

         input[type="file"] {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>


  <main class="table" id="customers_table">
    <section class="table__header">
        <h1>Registration Form Data </h1>
        <div class="input-group">
            <input type="search" placeholder="Search Data...">
            <img src="images/search.png" alt="">
        </div>
        <div class="export__file">
            <label for="export-file" class="export__file-btn" title="Export File"></label>
            <input type="checkbox" id="export-file">
            <div class="export__file-options">
                <label>Export As &nbsp; &#10140;</label>
                <label for="export-file" id="toPDF">PDF <img src="images/pdf.png" alt=""></label>
                <label for="export-file" id="toJSON">JSON <img src="images/json.png" alt=""></label>
                <label for="export-file" id="toCSV">CSV <img src="images/csv.png" alt=""></label>
                <label for="export-file" id="toEXCEL">EXCEL <img src="images/excel.png" alt=""></label>
            </div>
        </div>
    </section>
    <form>
    <section class="table__body">
      <table>
          <thead>
              <tr>
                  <th> Status </th>
                  <td><input type="text" name="Status" required></td></tr>
                  
                  <tr>
      <th> Title</th> 
   <td><input type="text" name="title" required></td>
     </tr>
              
     <tr> <th> First Name</th>
  <td><input type="text" name="first_name" required></td>
          </tr>


 <tr>  <th> Middle Name</th>
<td><input type="text" name="middle_name" required></td></tr>

 <tr>
   <th> Last Name </th>
<td><input type="text" name="last_name" required></td></tr>

<tr>
<th> Gender </th>
<td><input type="text" name="gender" required></td></tr>

<tr> <th> Student Id </th>
 <td><input type="text" name="student_id" required></td></tr>

              <tr><th> Admission Batch</th>
 <td><input type="text" name="admission_batch" required></td></tr>

         <tr><th> Admission Date</th>
<td><input type="text" name="admission_date" required></td></tr>

 <tr> <th> Application No</th>
 <td><input type="text" name="Application_no" required></td></tr>

  <tr> <th> Official Email Id </th>
   <td><input type="text" name="offficial email id" required></td></tr>

<tr><th> Personal Email Id</th>
  <td><input type="text" name="Personal email id " required></td></tr>

                 <tr> <th> Mobile No</th>
                  <td><input type="text" name="mobile_no" required></td></tr>

                 <tr> <th> Date of Birth </th>
                  <td><input type="text" name="date of birth" required><td></tr>

                  <tr><th> Aadhar Number </th>
                  <td><input type="text" name="aadhar number" required></td></tr>

               <tr>  <th> Nationality </th>
                  <td><input type="text" name="nationality" required></td></tr>

                  <tr><th> Emergency Contact Number</th>
                  <td><input type="text" name="Emergency Contact number" required></td></tr>

                  <tr><th> Religion</th>
                  <td><input type="text" name="religion" required></td></tr>

                 <tr><th> Blood Group</th>
                  <td><input type="text" name="blood group" required></td></tr>

                   <tr> <th> Passport Number</th>
                    <td><input type="text" name="Passport number" required></td></tr>

                    <tr>]<th> High School Name</th>
                    <td><input type="text" name="high school name" required></td></tr>

                    <tr><th> Board Name </th>
                    <td><input type="text" name="board name" required></td></tr>

                    <th> Stream <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="stream" required></td></tr>

                    <th> Passing Year <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="passing year" required></td></tr>

                    <th> School Address <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="school address" required></td></tr>

                    <th>Percentage/Cgpa  <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="Percentage/cgpa" required></td></tr>

                    <th> Intermediate School Name <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="intermediate school name" required></td></tr>

                    <th>Board Name  <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="board name" required></td></tr>

                    <th>  Stream<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="stream" required></td></tr>

                    <th>  Passing Year<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="passing year" required></td></tr>

                    <th> School Address <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="school address" required></td></tr>
                    
<th> Percentage/Cgpa <span class="icon-arrow">&UpArrow;</span></th>
<td><input type="text" name="Percentage/cgpa" required></td></tr>

                    <th> Collage/University Name <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="collage/university name" required></td></tr>

                    <th> Course Name <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="course name" required></td></tr>

                    <th> Specialization<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="Specialization" required></td></tr>

                    <th> Passing Year<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="passing year" required></td></tr>
                    

                    <th> Collage Address<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="collage Address" required></td></tr>

      <th> Post Garduation</br>Collage/University Name<span class="icon-arrow">&UpArrow;</span></th>
      <td><input type="text" name="collage/university name" required></td></tr>

                    <th> Course Name<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="course name" required></td></tr>
                    

                    <th> Specialization <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="Specialization" required></td></tr>

                    <th>Passing Year <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="passing year" required></td></tr>

                    <th> Collage Address <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="collage address" required></td></tr>

                    <th> Percentage/Cgpa <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="Percentage/cgpa" required></td></tr>

                    <th> Father Name <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="father name" required></td></tr>

                    <th> Father Email Id<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="father email id" required></td></tr>

                    <th> Father Phone No<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="father phone no" required></td></tr>

                    <th> Father Profession <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="father Profession" required></td></tr>

                    <th> Mother Name <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="mother name" required></td></tr>

                    <th> Mother Email Id<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="mother email id" required></td></tr>

                    <th> Mother Phone No<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="mother phone no" required></td></tr>

                    <th> Mother Profession <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="mother Profession" required></td></tr>

                    <th> Present Address<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="present address" required></td></tr>

                    <th> Street<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="street" required></td></tr>

                    <th> Landmark <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="landmark" required></td></tr>

                    <th> Pincode <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="pincode" required></td></tr>

                    <th> Country<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="country" required></td></tr>

                    <th> state<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="state" required></td></tr>

                    <th> city<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="city" required></td></tr>

                    <th> High School Marksheet</th><span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="high school marksheet" required></td></tr>

                    <th> Intermediate School Marksheet <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="intermediate school marksheet" required></td></tr>

                    <th> Graduation marksheet<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="graduation marksheet" required></td></tr>

                    <th> Graduation Degree<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="graduation degree" required></td></tr>

                    <th> Post Graduation Marksheet<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="post Graduation marksheet" required></td></tr>

                    <th> Post Graduation Degree <span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="post Graduation degree" required></td></tr>

                    <th> Post Graduation Migration<span class="icon-arrow">&UpArrow;</span></th>
                    <td><input type="text" name="post Graduation Migration" required></td></tr>

<th>Submit Documents<span class="icon-arrow">&UpArrow;</span></th>
           <td> <input type="submit" value="Submit All Documents" id="finalsubmitbtn"></td></tr>
           </tr>
        
              
          
            </thead>
      </table>
  </section>
<script>

const search = document.querySelector('.input-group input'),
    table_rows = document.querySelectorAll('tbody tr'),
    table_headings = document.querySelectorAll('thead th');
search.addEventListener('input', searchTable);

function searchTable() {
    table_rows.forEach((row, i) => {
        let table_data = row.textContent.toLowerCase(),
            search_data = search.value.toLowerCase();

        row.classList.toggle('hide', table_data.indexOf(search_data) < 0);
        row.style.setProperty('--delay', i / 25 + 's');
    })

    document.querySelectorAll('tbody tr:not(.hide)').forEach((visible_row, i) => {
        visible_row.style.backgroundColor = (i % 2 == 0) ? 'transparent' : '#0000000b';
    });
}

table_headings.forEach((head, i) => {
    let sort_asc = true;
    head.onclick = () => {
        table_headings.forEach(head => head.classList.remove('active'));
        head.classList.add('active');

        document.querySelectorAll('td').forEach(td => td.classList.remove('active'));
        table_rows.forEach(row => {
            row.querySelectorAll('td')[i].classList.add('active');
        })

        head.classList.toggle('asc', sort_asc);
        sort_asc = head.classList.contains('asc') ? false : true;

        sortTable(i, sort_asc);
    }
})


function sortTable(column, sort_asc) {
    [...table_rows].sort((a, b) => {
        let first_row = a.querySelectorAll('td')[column].textContent.toLowerCase(),
            second_row = b.querySelectorAll('td')[column].textContent.toLowerCase();

        return sort_asc ? (first_row < second_row ? 1 : -1) : (first_row < second_row ? -1 : 1);
    })
        .map(sorted_row => document.querySelector('tbody').appendChild(sorted_row));
}


const pdf_btn = document.querySelector('#toPDF');
const customers_table = document.querySelector('#customers_table');


const toPDF = function (customers_table) {
    const html_code = `
    <!DOCTYPE html>
    <link rel="stylesheet" type="text/css" href="style.css">
    <main class="table" id="customers_table">${customers_table.innerHTML}</main>`;

    const new_window = window.open();
     new_window.document.write(html_code);

    setTimeout(() => {
        new_window.print();
        new_window.close();
    }, 400);
}

pdf_btn.onclick = () => {
    toPDF(customers_table);
}



const json_btn = document.querySelector('#toJSON');

const toJSON = function (table) {
    let table_data = [],
        t_head = [],

        t_headings = table.querySelectorAll('th'),
        t_rows = table.querySelectorAll('tbody tr');

    for (let t_heading of t_headings) {
        let actual_head = t_heading.textContent.trim().split(' ');

        t_head.push(actual_head.splice(0, actual_head.length - 1).join(' ').toLowerCase());
    }

    t_rows.forEach(row => {
        const row_object = {},
            t_cells = row.querySelectorAll('td');

        t_cells.forEach((t_cell, cell_index) => {
            const img = t_cell.querySelector('img');
            if (img) {
                row_object['customer image'] = decodeURIComponent(img.src);
            }
            row_object[t_head[cell_index]] = t_cell.textContent.trim();
        })
        table_data.push(row_object);
    })

    return JSON.stringify(table_data, null, 4);
}

json_btn.onclick = () => {
    const json = toJSON(customers_table);
    downloadFile(json, 'json')
}



const csv_btn = document.querySelector('#toCSV');

const toCSV = function (table) {
 

    const t_heads = table.querySelectorAll('th'),
        tbody_rows = table.querySelectorAll('tbody tr');

    const headings = [...t_heads].map(head => {
        let actual_head = head.textContent.trim().split(' ');
        return actual_head.splice(0, actual_head.length - 1).join(' ').toLowerCase();
    }).join(',') + ',' + 'image name';

    const table_data = [...tbody_rows].map(row => {
        const cells = row.querySelectorAll('td'),
            img = decodeURIComponent(row.querySelector('img').src),
            data_without_img = [...cells].map(cell => cell.textContent.replace(/,/g, ".").trim()).join(',');

        return data_without_img + ',' + img;
    }).join('\n');

    return headings + '\n' + table_data;
}

csv_btn.onclick = () => {
    const csv = toCSV(customers_table);
    downloadFile(csv, 'csv', 'customer orders');
}


const excel_btn = document.querySelector('#toEXCEL');

const toExcel = function (table) {
   

    const t_heads = table.querySelectorAll('th'),
        tbody_rows = table.querySelectorAll('tbody tr');

    const headings = [...t_heads].map(head => {
        let actual_head = head.textContent.trim().split(' ');
        return actual_head.splice(0, actual_head.length - 1).join(' ').toLowerCase();
    }).join('\t') + '\t' + 'image name';

    const table_data = [...tbody_rows].map(row => {
        const cells = row.querySelectorAll('td'),
            img = decodeURIComponent(row.querySelector('img').src),
            data_without_img = [...cells].map(cell => cell.textContent.trim()).join('\t');

        return data_without_img + '\t' + img;
    }).join('\n');

    return headings + '\n' + table_data;
}

excel_btn.onclick = () => {
    const excel = toExcel(customers_table);
    downloadFile(excel, 'excel');
}

const downloadFile = function (data, fileType, fileName = '') {
    const a = document.createElement('a');
    a.download = fileName;
    const mime_types = {
        'json': 'application/json',
        'csv': 'text/csv',
        'excel': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    }
    a.href = `
        data:${mime_types[fileType]};charset=utf-8,${encodeURIComponent(data)}
    `;
    document.body.appendChild(a);
    a.click();
    a.remove();
}

 document.getElementById('finalsubmitbtn').onsubmit = async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            console.log('formdata------',formData);
            const response = await fetch('/user2regitster', {
                method: 'POST',
                body: formData
            });
            const result = await response.json();
            alert(result.message);
        };

</script>
</body>
</html>
